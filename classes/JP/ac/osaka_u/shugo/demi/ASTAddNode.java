/* Generated By:JJTree: Do not edit this line. ASTAddNode.java */

package JP.ac.osaka_u.shugo.demi;

public class ASTAddNode extends SimpleNode {
    public ASTAddNode(int id) {
	super(id);
    }

    public ASTAddNode(Parser p, int id) {
	super(p, id);
    }

    protected Object evaluate0(Demi demi) throws Throwable {
	Object left = ((SimpleNode) jjtGetChild(0)).evaluate(demi);
	Object right = ((SimpleNode) jjtGetChild(1)).evaluate(demi);
	if (left instanceof String || right instanceof String)
	    return left.toString() + right.toString();
	if (left instanceof Number && right instanceof Number)
	    return Numeric.add((Number) left, (Number) right);
	if (left instanceof Object[] && right instanceof Object[]) {
	    Object[] lary = (Object[]) left;
	    Object[] rary = (Object[]) right;
	    Object[] result = new Object[lary.length + rary.length];
	    System.arraycopy(lary, 0, result, 0, lary.length);
	    System.arraycopy(rary, 0, result, lary.length, rary.length);
	    return result;
	}
	throw new IllegalArgumentException("illegal arguments " +
					   left + ", " + right +
					   " for +");
    }
}
