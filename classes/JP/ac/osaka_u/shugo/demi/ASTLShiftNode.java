/* Generated By:JJTree: Do not edit this line. ASTLShiftNode.java */

package JP.ac.osaka_u.shugo.demi;

import java.lang.reflect.*;

public class ASTLShiftNode extends SimpleNode {
    public ASTLShiftNode(int id) {
	super(id);
    }

    public ASTLShiftNode(Parser p, int id) {
	super(p, id);
    }

    protected Object evaluate0(Demi demi) throws Throwable {
	Object left = ((SimpleNode) jjtGetChild(0)).evaluate(demi);
	Object right = ((SimpleNode) jjtGetChild(1)).evaluate(demi);
	if (left instanceof Number && right instanceof Number)
	    return Numeric.shiftLeft((Number) left, (Number) right);
	try {
	    Class[] paramTypes =
		new Class[]{Class.forName("java.lang.Object")};
	    Method method =
		left.getClass().getMethod("addElement", paramTypes);
	    method.invoke(left, new Object[]{right});
	    return left;
	} catch (Exception e) {
	}
	throw new IllegalArgumentException("illegal arguments " +
					   left + ", " + right +
					   " for <<");
    }
}
