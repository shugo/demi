/* Generated By:JJTree: Do not edit this line. ASTWhileExpression.java */

package JP.ac.osaka_u.shugo.demi;

public class ASTWhileExpression extends SimpleNode {

    public ASTWhileExpression(int id) {
	super(id);
    }

    public ASTWhileExpression(Parser p, int id) {
	super(p, id);
    }

    protected Object evaluate0(Demi demi) throws Throwable {
	Scope scope = demi.getScope();
	SimpleNode cond = (SimpleNode) jjtGetChild(0);
	SimpleNode expressionList = (SimpleNode) jjtGetChild(1);
	while (Demi.test(cond.evaluate(demi))) {
	    try {
		expressionList.evaluate(demi);
	    } catch (Break b) {
		if (b.scope == scope) {
		    break;
		} else {
		    throw b;
		}
	    } catch (Continue c) {
		if (c.scope == scope) {
		    continue;
		} else {
		    throw c;
		}
	    }
	}
	return null;
    }
}
