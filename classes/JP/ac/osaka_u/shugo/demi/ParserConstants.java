/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */
package JP.ac.osaka_u.shugo.demi;

public interface ParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 8;
  int MULTI_LINE_COMMENT = 9;
  int BREAK = 11;
  int CATCH = 12;
  int CLASS = 13;
  int CONTINUE = 14;
  int DEF = 15;
  int ELSE = 16;
  int ELSIF = 17;
  int END = 18;
  int EXCEPTION = 19;
  int FALSE = 20;
  int FINALLY = 21;
  int FOR = 22;
  int IF = 23;
  int IN = 24;
  int IMPORT = 25;
  int INSTANCEOF = 26;
  int MODULE = 27;
  int NEW = 28;
  int NULL = 29;
  int RETURN = 30;
  int SYNCHRONIZED = 31;
  int THIS = 32;
  int THROW = 33;
  int TRUE = 34;
  int TRY = 35;
  int WHILE = 36;
  int DECIMAL_LITERAL = 37;
  int HEX_LITERAL = 38;
  int OCTAL_LITERAL = 39;
  int FLOATING_POINT_LITERAL = 40;
  int EXPONENT = 41;
  int CHARACTER_LITERAL = 42;
  int STRING_LITERAL = 43;
  int IDENTIFIER = 44;
  int LETTER = 45;
  int DIGIT = 46;
  int SYMBOL = 47;
  int LPAREN = 48;
  int RPAREN = 49;
  int LBRACE = 50;
  int RBRACE = 51;
  int LBRACKET = 52;
  int RBRACKET = 53;
  int SEMICOLON = 54;
  int COMMA = 55;
  int DOT = 56;
  int ASSIGN = 57;
  int GT = 58;
  int LT = 59;
  int BANG = 60;
  int TILDE = 61;
  int HOOK = 62;
  int COLON = 63;
  int COLON2 = 64;
  int EQ = 65;
  int IEQ = 66;
  int LE = 67;
  int GE = 68;
  int NE = 69;
  int SC_OR = 70;
  int SC_AND = 71;
  int PLUS = 72;
  int MINUS = 73;
  int STAR = 74;
  int SLASH = 75;
  int BIT_AND = 76;
  int BIT_OR = 77;
  int XOR = 78;
  int REM = 79;
  int LSHIFT = 80;
  int RSIGNEDSHIFT = 81;
  int RUNSIGNEDSHIFT = 82;
  int DOT2 = 83;
  int SHARP = 84;
  int PLUSASSIGN = 85;
  int MINUSASSIGN = 86;
  int STARASSIGN = 87;
  int SLASHASSIGN = 88;
  int ANDASSIGN = 89;
  int ORASSIGN = 90;
  int XORASSIGN = 91;
  int REMASSIGN = 92;
  int LSHIFTASSIGN = 93;
  int RSIGNEDSHIFTASSIGN = 94;
  int RUNSIGNEDSHIFTASSIGN = 95;
  int INCR = 96;
  int DECR = 97;

  int DEFAULT = 0;
  int IN_SINGLE_LINE_COMMENT = 1;
  int IN_MULTI_LINE_COMMENT = 2;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 10>",
    "\"break\"",
    "\"catch\"",
    "\"class\"",
    "\"continue\"",
    "\"def\"",
    "\"else\"",
    "\"elsif\"",
    "\"end\"",
    "\"exception\"",
    "\"false\"",
    "\"finally\"",
    "\"for\"",
    "\"if\"",
    "\"in\"",
    "\"import\"",
    "\"instanceof\"",
    "\"module\"",
    "\"new\"",
    "\"null\"",
    "\"return\"",
    "\"synchronized\"",
    "\"this\"",
    "\"throw\"",
    "\"true\"",
    "\"try\"",
    "\"while\"",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<EXPONENT>",
    "<CHARACTER_LITERAL>",
    "<STRING_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<SYMBOL>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\"!\"",
    "\"~\"",
    "\"?\"",
    "\":\"",
    "\"::\"",
    "\"==\"",
    "\"===\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"||\"",
    "\"&&\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"&\"",
    "\"|\"",
    "\"^\"",
    "\"%\"",
    "\"<<\"",
    "\">>\"",
    "\">>>\"",
    "\"..\"",
    "\"#\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"&=\"",
    "\"|=\"",
    "\"^=\"",
    "\"%=\"",
    "\"<<=\"",
    "\">>=\"",
    "\">>>=\"",
    "\"++\"",
    "\"--\"",
    "\"=>\"",
  };

}
